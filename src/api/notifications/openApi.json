{
  "openapi": "3.0.0",
  "info": {
    "version": "2.0.0",
    "title": "Signal K Notifications API",
    "termsOfService": "http://signalk.org/terms/",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "API for raising and actioning Notifications / Alarms. Notifications raised using this API are assigned an <b>id</b> which can be used for subsequent actions."
  },
  "externalDocs": {
    "url": "http://signalk.org/specification/",
    "description": "Signal K specification."
  },
  "servers": [
    {
      "url": "/signalk/v2/api/notifications"
    }
  ],
  "tags": [
    {
      "name": "notifications",
      "description": "General actions."
    },
    {
      "name": "via path",
      "description": "Action notifications via specified path."
    },
    {
      "name": "via id",
      "description": "Action notifications via supplied id."
    },
    {
      "name": "alarms",
      "description": "Standard, pre-defined alarms."
    }
  ],
  "components": {
    "schemas": {
      "UuidDef": {
        "type": "string",
        "pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}$",
        "example": "ac3a3b2d-07e8-4f25-92bc-98e7c92f7f1a"
      },
      "PathDef": {
        "type": "string",
        "description": "Notification path.",
        "example": "notifications.mob"
      },
      "MethodDef": {
        "type": "array",
        "minimum": 0,
        "maximum": 2,
        "uniqueItems": true,
        "description": "How the alarm is actioned.",
        "example": ["sound"],
        "items": {
          "type": "string",
          "enum": ["visual", "sound"]
        }
      },
      "SeverityDef": {
        "type": "string",
        "description": "Severity of the alarm.",
        "example": "alert",
        "enum": ["normal", "nominal", "alert", "warning", "alarm", "emergency"]
      },
      "MessageDef": {
        "type": "string",
        "description": "Notification message to display.",
        "example": "My message!"
      },
      "TypeDef": {
        "type": "string",
        "description": "Type of notification.",
        "example": "OverVoltage"
      },
      "DataDef": {
        "type": "object",
        "additionalProperties": true,
        "description": "Data values associated with this notification."
      },
      "RequestModel": {
        "type": "object",
        "properties": {
          "state": {
            "$ref": "#/components/schemas/SeverityDef"
          },
          "message": {
            "$ref": "#/components/schemas/MessageDef"
          },
          "data": {
            "$ref": "#/components/schemas/DataDef"
          },
          "type": {
            "$ref": "#/components/schemas/TypeDef"
          }
        }
      },
      "ResponseModel": {
        "description": "Notification information",
        "type": "object",
        "required": ["timestamp", "$source"],
        "properties": {
          "timestamp": {
            "type": "string"
          },
          "$source": {
            "type": "string"
          },
          "value": {
            "type": "object",
            "required": ["method", "state", "message"],
            "properties": {
              "method": {
                "$ref": "#/components/schemas/MethodDef"
              },
              "state": {
                "$ref": "#/components/schemas/SeverityDef"
              },
              "message": {
                "$ref": "#/components/schemas/MessageDef"
              },
              "data": {
                "$ref": "#/components/schemas/DataDef"
              },
              "id": {
                "$ref": "#/components/schemas/UuidDef"
              },
              "type": {
                "$ref": "#/components/schemas/TypeDef"
              }
            }
          }
        }
      }
    },
    "responses": {
      "200Ok": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "state": {
                  "type": "string",
                  "enum": ["COMPLETED"]
                },
                "statusCode": {
                  "type": "number",
                  "enum": [200]
                }
              },
              "required": ["state", "statusCode"]
            }
          }
        }
      },
      "201ActionResponse": {
        "description": "Action response - success.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "state": {
                  "type": "string",
                  "enum": ["COMPLETED"]
                },
                "statusCode": {
                  "type": "number",
                  "enum": [201]
                },
                "id": {
                  "$ref": "#/components/schemas/UuidDef"
                }
              },
              "required": ["id", "statusCode", "state"]
            }
          }
        }
      },
      "ErrorResponse": {
        "description": "Failed operation",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Request error response",
              "properties": {
                "state": {
                  "type": "string",
                  "enum": ["FAILED"]
                },
                "statusCode": {
                  "type": "number",
                  "enum": [404]
                },
                "message": {
                  "type": "string"
                }
              },
              "required": ["state", "statusCode", "message"]
            }
          }
        }
      },
      "NotificationResponse": {
        "description": "Notification information response.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ResponseModel"
            }
          }
        }
      }
    },
    "parameters": {
      "Source": {
        "name": "source",
        "description": "The source that raised the notification at the defined path.",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "JAUTHENTICATION"
      }
    }
  },
  "security": [{ "cookieAuth": [] }, { "bearerAuth": [] }],
  "paths": {
    "/": {
      "get": {
        "tags": ["notifications"],
        "summary": "Filtered notification list keyed by id.",
        "description": "Retrieve list of notifications filtered by the specified parameter.",
        "parameters": [
          {
            "name": "type",
            "description": "Filter results by notification type.",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/TypeDef"
            }
          },
          {
            "name": "severity",
            "description": "Filter results by alarm severity.",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SeverityDef"
            }
          },
          {
            "name": "key",
            "description": "List results by provided key value.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["path", "id"]
            }
          }
        ],
        "responses": {
          "default": {
            "description": "An object containing notifications, keyed by their id.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ResponseModel"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/mob": {
      "post": {
        "tags": ["alarms"],
        "summary": "Man overboard alarm.",
        "description": "Raise a Man overboard alarm with system generated message including vessel position.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Ok"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/{id}": {
      "parameters": [
        {
          "name": "id",
          "description": "Notification identifier.",
          "in": "path",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/UuidDef"
          }
        }
      ],
      "get": {
        "tags": ["via id"],
        "summary": "Retrieve notification information.",
        "description": "Retrieve information for notification with supplied id.",
        "responses": {
          "default": {
            "$ref": "#/components/responses/NotificationResponse"
          }
        }
      },
      "put": {
        "tags": ["via id"],
        "summary": "Action a notification.",
        "description": "Raise or action the notification with the specified id.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Ok"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "delete": {
        "tags": ["via id"],
        "summary": "Clear notification.",
        "description": "Clear the notification with the supplied id.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Ok"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/*": {
      "get": {
        "tags": ["via path"],
        "summary": "Retrieve notification information.",
        "description": "Retrieve information for notification with supplied id.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Source"
          }
        ],
        "responses": {
          "default": {
            "$ref": "#/components/responses/NotificationResponse"
          }
        }
      },
      "put": {
        "tags": ["via path"],
        "summary": "Action a notification.",
        "description": "Raise or action a notification at the specified path.",
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/201ActionResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      },
      "delete": {
        "tags": ["via path"],
        "summary": "Clear notification.",
        "description": "Clear the specified notification.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Source"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200Ok"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    }
  }
}
