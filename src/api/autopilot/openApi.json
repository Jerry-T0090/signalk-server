{
  "openapi": "3.0.0",
  "info": {
    "version": "2.0.0",
    "title": "Signal K Autopilot API",
    "termsOfService": "http://signalk.org/terms/",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "externalDocs": {
    "url": "http://signalk.org/specification/",
    "description": "Signal K specification."
  },
  "servers": [
    {
      "url": "/signalk/v2/api/vessels/self/steering/autopilot"
    }
  ],
  "tags": [
    {
      "name": "autopilot",
      "description": "Signal K Autopilot API"
    }
  ],
  "components": {
    "schemas": {},
    "responses": {
      "200ActionResponse": {
        "description": "PUT OK response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "state": {
                  "type": "string",
                  "enum": ["COMPLETED"]
                },
                "statusCode": {
                  "type": "number",
                  "enum": [200]
                }
              },
              "required": ["statusCode", "state"]
            }
          }
        }
      },
      "ErrorResponse": {
        "description": "Failed operation",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "description": "Request error response",
              "properties": {
                "state": {
                  "type": "string",
                  "enum": ["FAILED"]
                },
                "statusCode": {
                  "type": "number",
                  "enum": [400, 404]
                },
                "message": {
                  "type": "string"
                }
              },
              "required": ["state", "statusCode", "message"]
            }
          }
        }
      }
    },
    "parameters": {},
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "JAUTHENTICATION"
      }
    }
  },
  "security": [{ "cookieAuth": [] }, { "bearerAuth": [] }],
  "paths": {
    "/": {
      "get": {
        "tags": ["autopilot"],
        "summary": "Retrieve autopilot information.",
        "description": "Returns the current sate autopilot information including the available options for `state` and `mode`.",
        "responses": {
          "default": {
            "description": "Autopilot configuration response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "state",
                    "mode",
                    "target"
                  ],
                  "properties": {
                    "state": {
                      "type": "string",
                      "description": "Autopilot state",
                      "example": "disabled"
                    },
                    "mode": {
                      "type": "string",
                      "description": "Autopilot operational mode",
                      "example": "compass"
                    },
                    "target": {
                      "description": "Current target value (radians)",
                      "type": "number",
                      "example": 1.25643
                    },
                    "options": {
                      "type": "object",
                      "title": "Autopilot configuration options",
                      "description": "A collection of configuration options and their vaild values.",
                      "properties": {
                        "state": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of valid State values",
                          "example": ["enabled","disabled"]
                        },
                        "mode": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of valid Mode values",
                          "example": ["compass","gps"]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "error": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/engage": {
      "post": {
        "tags": ["autopilot"],
        "summary": "Engage autopilot to steer vessel.",
        "responses": {
          "200ActionResponse": {
            "$ref": "#/components/responses/200ActionResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/disengage": {
      "post": {
        "tags": ["autopilot"],
        "summary": "Disengage autopilot from steering vessel.",
        "responses": {
          "200ActionResponse": {
            "$ref": "#/components/responses/200ActionResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/state": {
      "put": {
        "tags": ["autopilot"],
        "summary": "Set autopilot state.",
        "requestBody": {
          "description": "Supply valid `state` value (as per response from autopilot information request).",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Value representing the `state` the autopilot is to enter.",
                    "example": "enabled"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200ActionResponse": {
            "$ref": "#/components/responses/200ActionResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/mode": {
      "put": {
        "tags": ["autopilot"],
        "summary": "Set autopilot mode",
        "requestBody": {
          "description": "Supply valid `mode` value (as per response from autopilot information request).",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Value representing the `mode` the autopilot is to enter.",
                    "example": "compass"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200ActionResponse": {
            "$ref": "#/components/responses/200ActionResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/target": {
      "put": {
        "tags": ["autopilot"],
        "summary": "Set autopilot `target` value (radians).",
        "requestBody": {
          "description": "Value in radians within the bounds of the current autopilot mode. (i.e. compass: 0 to 2*Pi, wind angle: -Pi to Pi)",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number",
                    "description": "Value in radians",
                    "min": -3.141592653589793,
                    "max": 6.283185307179586,
                    "example": -1.23789
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200ActionResponse": {
            "$ref": "#/components/responses/200ActionResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/target/adjust": {
      "put": {
        "tags": ["autopilot"],
        "summary": "Adjust autopilot target value by +/- radians.",
        "requestBody": {
          "description": "A value in radians to add to the current `target` value.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "number",
                    "description": "Value in radians.",
                    "example": -0.23789
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200ActionResponse": {
            "$ref": "#/components/responses/200ActionResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/tack/port": {
      "post": {
        "tags": ["autopilot"],
        "summary": "Tack to port.",
        "responses": {
          "200ActionResponse": {
            "$ref": "#/components/responses/200ActionResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/tack/starboard": {
      "post": {
        "tags": ["autopilot"],
        "summary": "Tack to starboard.",
        "responses": {
          "200ActionResponse": {
            "$ref": "#/components/responses/200ActionResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/gybe/port": {
      "post": {
        "tags": ["autopilot"],
        "summary": "Gybe to port.",
        "responses": {
          "200ActionResponse": {
            "$ref": "#/components/responses/200ActionResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/gybe/starboard": {
      "post": {
        "tags": ["autopilot"],
        "summary": "Gybe to starboard.",
        "responses": {
          "200ActionResponse": {
            "$ref": "#/components/responses/200ActionResponse"
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    }
  }
}
